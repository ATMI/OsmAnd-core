diff -rupN upstream.original/src/google/protobuf/io/coded_stream.cc upstream.patched/src/google/protobuf/io/coded_stream.cc
--- upstream.original/src/google/protobuf/io/coded_stream.cc	2011-04-30 20:22:04.000000000 +0300
+++ upstream.patched/src/google/protobuf/io/coded_stream.cc	2013-02-21 18:31:54.780053300 +0200
@@ -160,6 +160,24 @@ void CodedInputStream::PrintTotalBytesLi
                 "in google/protobuf/io/coded_stream.h.";
 }
 
+//OSMAND{
+bool CodedInputStream::Seek(int filePointer) {
+  int currentPosition = CurrentPosition();
+  if(filePointer >= currentPosition) {
+    return Skip(filePointer - currentPosition);
+  } else {
+    int rewind = total_bytes_read_ - filePointer;
+    input_->BackUp(rewind);
+    buffer_ = NULL;
+    buffer_end_ = NULL;
+    total_bytes_read_ -= rewind;
+    buffer_size_after_limit_ = 0;
+    overflow_bytes_ = 0;
+    return true;
+  }
+}
+//}OSMAND
+
 bool CodedInputStream::Skip(int count) {
   if (count < 0) return false;  // security: count is often user-supplied
 
@@ -401,6 +419,12 @@ uint32 CodedInputStream::ReadTagFallback
   }
 }
 
+//OSMAND{
+int CodedInputStream::CurrentPosition() {
+  return total_bytes_read_ - (BufferSize() + buffer_size_after_limit_);
+}
+//}OSMAND
+
 bool CodedInputStream::ReadVarint64Slow(uint64* value) {
   // Slow path:  This read might cross the end of the buffer, so we
   // need to check and refresh the buffer if and when it does.
diff -rupN upstream.original/src/google/protobuf/io/coded_stream.h upstream.patched/src/google/protobuf/io/coded_stream.h
--- upstream.original/src/google/protobuf/io/coded_stream.h	2011-04-30 20:22:04.000000000 +0300
+++ upstream.patched/src/google/protobuf/io/coded_stream.h	2013-02-21 18:15:57.345140200 +0200
@@ -174,6 +174,11 @@ class LIBPROTOBUF_EXPORT CodedInputStrea
   // Skips a number of bytes.  Returns false if an underlying read error
   // occurs.
   bool Skip(int count);
+  
+  //OSMAND{
+  // Seeks in the file
+  bool Seek(int filePointer);
+  //}OSMAND
 
   // Sets *data to point directly at the unread part of the CodedInputStream's
   // underlying buffer, and *size to the size of that buffer, but does not
@@ -312,6 +317,11 @@ class LIBPROTOBUF_EXPORT CodedInputStrea
   // Returns the number of bytes left until the nearest limit on the
   // stack is hit, or -1 if no limits are in place.
   int BytesUntilLimit();
+  
+  //OSMAND{
+  // Returns the number of bytes totally read
+  int CurrentPosition();
+  //}OSMAND
 
   // Total Bytes Limit -----------------------------------------------
   // To prevent malicious users from sending excessively large messages
diff -rupN upstream.original/src/google/protobuf/wire_format_lite.h upstream.patched/src/google/protobuf/wire_format_lite.h
--- upstream.original/src/google/protobuf/wire_format_lite.h	2011-04-30 20:22:04.000000000 +0300
+++ upstream.patched/src/google/protobuf/wire_format_lite.h	2013-02-18 18:48:50.031966500 +0200
@@ -92,6 +92,9 @@ class LIBPROTOBUF_EXPORT WireFormatLite
     WIRETYPE_START_GROUP      = 3,
     WIRETYPE_END_GROUP        = 4,
     WIRETYPE_FIXED32          = 5,
+    //OSMAND{
+    WIRETYPE_FIXED32_LENGTH_DELIMITED = 6,
+    //}OSMAND
   };
 
   // Lite alternative to FieldDescriptor::Type.  Must be kept in sync.
