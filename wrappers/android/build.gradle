buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.8.+'
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'android-library'

android {
    sourceSets.main {
        manifest.srcFile "AndroidManifest.xml"
        jniLibs.srcDirs = ["libs"]
        jni.srcDirs = []
        java.srcDirs = ["src", "../java/gen/java"]
    }

    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 19
    }

    lintOptions {
        abortOnError false
    }
}

// Java sources generation task
import org.apache.tools.ant.taskdefs.condition.Os
task swigGenerate(type: Exec) {
    description "Generate SWIG sources"

    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine "cmd", "/c", "bash --login "+file("../java/generate.sh")
    } else {
        commandLine "sh", file("../java/generate.sh")
    }
}
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn << swigGenerate
}

// NDK build task
import org.apache.tools.ant.taskdefs.condition.Os
task ndkBuild(type: Exec) {
    description "NDK build"

    dependsOn swigGenerate

    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine "cmd", "/c", "bash --login "+file("build.sh")
    } else {
        commandLine "sh", file("build.sh")
    }
}
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn << ndkBuild
}

dependencies {
    compile fileTree(dir: "libs", include: ["*.jar"])
}
